---
  - name: Ensure old versions of Docker are not installed.
    apt:
      name: "{{ item }}"
      state: "{{ OLD_DOCKER_VERSION_STATE }}"
      purge: true
    loop: "{{ DEBIAN_OLD_DOCKER_VERSION }}"
  
  - name: Remove Images, containers, volumes, or custom configuration ... 
    command: "{{ item }}"
    loop:
      - rm -rf /var/lib/docker
      - rm -rf /var/lib/containerd

  - name: Ensure dependencies are installed.
    apt:
      name: "{{ item }}"
    loop: "{{ DEBIAN_DEPENDENCIES }}"
    when: DOCKER_ADD_REPO | bool

  - name: Ensure additional dependencies are installed (on Ubuntu < 20.04 and any other systems).
    apt:
      name: gnupg2
      state: "{{ DEPENDENCIES_STATE }}"
    when: ansible_distribution != 'Ubuntu' or ansible_distribution_version is version('20.04', '<')

  - name: Ensure additional dependencies are installed (on Ubuntu >= 20.04).
    apt:
      name: gnupg
      state: "{{ DEPENDENCIES_STATE }}"
    when: ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('20.04', '>=')

  - name: Add Docker apt key.
    get_url:
      url: "{{ DOCKER_APT_GPG_KEY }}"
      dest: /etc/apt/trusted.gpg.d/docker.asc
      mode: '0644'
      force: true
    register: add_repository_key
    ignore_errors: "{{ DOCKER_APT_IGNORE_KEY_ERROR }}"
    when: DOCKER_ADD_REPO | bool

  - name: Add Docker apt key (alternative for older systems without SNI).
    shell: >
      curl -sSL {{ DOCKER_APT_GPG_KEY }} | apt-key add -
    when: add_repository_key is failed and DOCKER_ADD_REPO | bool

  - name: Add Docker repository.
    apt_repository:
      repo: "{{ DOCKER_APT_REPOSITORY }}"
      state: present
      update_cache: true
    when: DOCKER_ADD_REPO | bool

  - name: Install Docker And Docker Engine
    apt:
      name: "{{ item }}"
      update_cache: true
      state: present
    loop: "{{ DOCKER }}"
    notify:
      - Restart Docker